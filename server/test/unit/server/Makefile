# Makefile.in generated by automake 1.9.5 from Makefile.am.
# test/unit/server/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



SOURCES = check_alchemy.c check_apply.c check_attack.c check_ban.c check_build_map.c check_c_chat.c check_c_misc.c check_c_move.c check_c_new.c check_c_object.c check_c_party.c check_c_range.c check_c_wiz.c check_commands.c check_daemon.c check_disease.c check_egoitem.c check_gods.c check_hiscore.c check_init.c check_login.c check_main.c check_monster.c check_move.c check_pets.c check_player.c check_plugins.c check_resurrection.c check_rune.c check_shop.c check_skill_util.c check_skills.c check_spell_attack.c check_spell_effect.c check_spell_util.c check_swamp.c check_swap.c check_time.c check_timers.c check_weather.c check_win32.c

srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/wograld
pkglibdir = $(libdir)/wograld
pkgincludedir = $(includedir)/wograld
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/check-fragment.am
noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = test/unit/server
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/utils/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/autoconf.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = check_alchemy$(EXEEXT) check_apply$(EXEEXT) \
	check_attack$(EXEEXT) check_ban$(EXEEXT) \
	check_build_map$(EXEEXT) check_c_chat$(EXEEXT) \
	check_c_misc$(EXEEXT) check_c_move$(EXEEXT) \
	check_c_new$(EXEEXT) check_c_object$(EXEEXT) \
	check_commands$(EXEEXT) check_c_party$(EXEEXT) \
	check_c_range$(EXEEXT) check_c_wiz$(EXEEXT) \
	check_daemon$(EXEEXT) check_disease$(EXEEXT) \
	check_egoitem$(EXEEXT) check_gods$(EXEEXT) \
	check_hiscore$(EXEEXT) check_init$(EXEEXT) \
	check_login$(EXEEXT) check_main$(EXEEXT) \
	check_monster$(EXEEXT) check_move$(EXEEXT) check_pets$(EXEEXT) \
	check_player$(EXEEXT) check_plugins$(EXEEXT) \
	check_resurrection$(EXEEXT) check_rune$(EXEEXT) \
	check_shop$(EXEEXT) check_skills$(EXEEXT) \
	check_skill_util$(EXEEXT) check_spell_attack$(EXEEXT) \
	check_spell_effect$(EXEEXT) check_spell_util$(EXEEXT) \
	check_swamp$(EXEEXT) check_swap$(EXEEXT) check_time$(EXEEXT) \
	check_timers$(EXEEXT) check_weather$(EXEEXT) \
	check_win32$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
check_alchemy_SOURCES = check_alchemy.c
check_alchemy_OBJECTS = check_alchemy.$(OBJEXT)
check_alchemy_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
check_alchemy_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_apply_SOURCES = check_apply.c
check_apply_OBJECTS = check_apply.$(OBJEXT)
check_apply_LDADD = $(LDADD)
check_apply_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_attack_SOURCES = check_attack.c
check_attack_OBJECTS = check_attack.$(OBJEXT)
check_attack_LDADD = $(LDADD)
check_attack_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_ban_SOURCES = check_ban.c
check_ban_OBJECTS = check_ban.$(OBJEXT)
check_ban_LDADD = $(LDADD)
check_ban_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_build_map_SOURCES = check_build_map.c
check_build_map_OBJECTS = check_build_map.$(OBJEXT)
check_build_map_LDADD = $(LDADD)
check_build_map_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_chat_SOURCES = check_c_chat.c
check_c_chat_OBJECTS = check_c_chat.$(OBJEXT)
check_c_chat_LDADD = $(LDADD)
check_c_chat_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_misc_SOURCES = check_c_misc.c
check_c_misc_OBJECTS = check_c_misc.$(OBJEXT)
check_c_misc_LDADD = $(LDADD)
check_c_misc_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_move_SOURCES = check_c_move.c
check_c_move_OBJECTS = check_c_move.$(OBJEXT)
check_c_move_LDADD = $(LDADD)
check_c_move_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_new_SOURCES = check_c_new.c
check_c_new_OBJECTS = check_c_new.$(OBJEXT)
check_c_new_LDADD = $(LDADD)
check_c_new_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_object_SOURCES = check_c_object.c
check_c_object_OBJECTS = check_c_object.$(OBJEXT)
check_c_object_LDADD = $(LDADD)
check_c_object_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_party_SOURCES = check_c_party.c
check_c_party_OBJECTS = check_c_party.$(OBJEXT)
check_c_party_LDADD = $(LDADD)
check_c_party_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_range_SOURCES = check_c_range.c
check_c_range_OBJECTS = check_c_range.$(OBJEXT)
check_c_range_LDADD = $(LDADD)
check_c_range_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_c_wiz_SOURCES = check_c_wiz.c
check_c_wiz_OBJECTS = check_c_wiz.$(OBJEXT)
check_c_wiz_LDADD = $(LDADD)
check_c_wiz_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_commands_SOURCES = check_commands.c
check_commands_OBJECTS = check_commands.$(OBJEXT)
check_commands_LDADD = $(LDADD)
check_commands_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_daemon_SOURCES = check_daemon.c
check_daemon_OBJECTS = check_daemon.$(OBJEXT)
check_daemon_LDADD = $(LDADD)
check_daemon_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_disease_SOURCES = check_disease.c
check_disease_OBJECTS = check_disease.$(OBJEXT)
check_disease_LDADD = $(LDADD)
check_disease_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_egoitem_SOURCES = check_egoitem.c
check_egoitem_OBJECTS = check_egoitem.$(OBJEXT)
check_egoitem_LDADD = $(LDADD)
check_egoitem_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_gods_SOURCES = check_gods.c
check_gods_OBJECTS = check_gods.$(OBJEXT)
check_gods_LDADD = $(LDADD)
check_gods_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_hiscore_SOURCES = check_hiscore.c
check_hiscore_OBJECTS = check_hiscore.$(OBJEXT)
check_hiscore_LDADD = $(LDADD)
check_hiscore_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_init_SOURCES = check_init.c
check_init_OBJECTS = check_init.$(OBJEXT)
check_init_LDADD = $(LDADD)
check_init_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_login_SOURCES = check_login.c
check_login_OBJECTS = check_login.$(OBJEXT)
check_login_LDADD = $(LDADD)
check_login_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_main_SOURCES = check_main.c
check_main_OBJECTS = check_main.$(OBJEXT)
check_main_LDADD = $(LDADD)
check_main_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_monster_SOURCES = check_monster.c
check_monster_OBJECTS = check_monster.$(OBJEXT)
check_monster_LDADD = $(LDADD)
check_monster_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_move_SOURCES = check_move.c
check_move_OBJECTS = check_move.$(OBJEXT)
check_move_LDADD = $(LDADD)
check_move_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_pets_SOURCES = check_pets.c
check_pets_OBJECTS = check_pets.$(OBJEXT)
check_pets_LDADD = $(LDADD)
check_pets_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_player_SOURCES = check_player.c
check_player_OBJECTS = check_player.$(OBJEXT)
check_player_LDADD = $(LDADD)
check_player_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_plugins_SOURCES = check_plugins.c
check_plugins_OBJECTS = check_plugins.$(OBJEXT)
check_plugins_LDADD = $(LDADD)
check_plugins_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_resurrection_SOURCES = check_resurrection.c
check_resurrection_OBJECTS = check_resurrection.$(OBJEXT)
check_resurrection_LDADD = $(LDADD)
check_resurrection_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_rune_SOURCES = check_rune.c
check_rune_OBJECTS = check_rune.$(OBJEXT)
check_rune_LDADD = $(LDADD)
check_rune_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_shop_SOURCES = check_shop.c
check_shop_OBJECTS = check_shop.$(OBJEXT)
check_shop_LDADD = $(LDADD)
check_shop_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_skill_util_SOURCES = check_skill_util.c
check_skill_util_OBJECTS = check_skill_util.$(OBJEXT)
check_skill_util_LDADD = $(LDADD)
check_skill_util_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_skills_SOURCES = check_skills.c
check_skills_OBJECTS = check_skills.$(OBJEXT)
check_skills_LDADD = $(LDADD)
check_skills_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_spell_attack_SOURCES = check_spell_attack.c
check_spell_attack_OBJECTS = check_spell_attack.$(OBJEXT)
check_spell_attack_LDADD = $(LDADD)
check_spell_attack_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_spell_effect_SOURCES = check_spell_effect.c
check_spell_effect_OBJECTS = check_spell_effect.$(OBJEXT)
check_spell_effect_LDADD = $(LDADD)
check_spell_effect_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_spell_util_SOURCES = check_spell_util.c
check_spell_util_OBJECTS = check_spell_util.$(OBJEXT)
check_spell_util_LDADD = $(LDADD)
check_spell_util_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_swamp_SOURCES = check_swamp.c
check_swamp_OBJECTS = check_swamp.$(OBJEXT)
check_swamp_LDADD = $(LDADD)
check_swamp_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_swap_SOURCES = check_swap.c
check_swap_OBJECTS = check_swap.$(OBJEXT)
check_swap_LDADD = $(LDADD)
check_swap_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_time_SOURCES = check_time.c
check_time_OBJECTS = check_time.$(OBJEXT)
check_time_LDADD = $(LDADD)
check_time_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_timers_SOURCES = check_timers.c
check_timers_OBJECTS = check_timers.$(OBJEXT)
check_timers_LDADD = $(LDADD)
check_timers_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_weather_SOURCES = check_weather.c
check_weather_OBJECTS = check_weather.$(OBJEXT)
check_weather_LDADD = $(LDADD)
check_weather_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
check_win32_SOURCES = check_win32.c
check_win32_OBJECTS = check_win32.$(OBJEXT)
check_win32_LDADD = $(LDADD)
check_win32_DEPENDENCIES = ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a ../../../server/libserver.a \
	../../../common/libcross.a \
	../../../random_maps/librandom_map.a \
	../../../socket/libsocket.a $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/utils/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
SOURCES = check_alchemy.c check_apply.c check_attack.c check_ban.c \
	check_build_map.c check_c_chat.c check_c_misc.c check_c_move.c \
	check_c_new.c check_c_object.c check_c_party.c check_c_range.c \
	check_c_wiz.c check_commands.c check_daemon.c check_disease.c \
	check_egoitem.c check_gods.c check_hiscore.c check_init.c \
	check_login.c check_main.c check_monster.c check_move.c \
	check_pets.c check_player.c check_plugins.c \
	check_resurrection.c check_rune.c check_shop.c \
	check_skill_util.c check_skills.c check_spell_attack.c \
	check_spell_effect.c check_spell_util.c check_swamp.c \
	check_swap.c check_time.c check_timers.c check_weather.c \
	check_win32.c
DIST_SOURCES = check_alchemy.c check_apply.c check_attack.c \
	check_ban.c check_build_map.c check_c_chat.c check_c_misc.c \
	check_c_move.c check_c_new.c check_c_object.c check_c_party.c \
	check_c_range.c check_c_wiz.c check_commands.c check_daemon.c \
	check_disease.c check_egoitem.c check_gods.c check_hiscore.c \
	check_init.c check_login.c check_main.c check_monster.c \
	check_move.c check_pets.c check_player.c check_plugins.c \
	check_resurrection.c check_rune.c check_shop.c \
	check_skill_util.c check_skills.c check_spell_attack.c \
	check_spell_effect.c check_spell_util.c check_swamp.c \
	check_swap.c check_time.c check_timers.c check_weather.c \
	check_win32.c
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run autoconf
AUTOHEADER = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run autoheader
AUTOMAKE = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run automake-1.9
AWK = gawk
BASENAME = /usr/bin/basename
BUNZIP = /bin/bunzip2
BZIP = /bin/bzip2
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = 
CHECK_CFLAGS = 
CHECK_LIBS = 
COMPRESS = 
CPP = gcc -E
CPPFLAGS = 
WOGEDIT = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GUNZIP = /bin/gunzip
GZIP = /bin/gzip
HAVE_CHECK_FALSE = 
HAVE_CHECK_TRUE = #
HAVE_LIBDL_FALSE = #
HAVE_LIBDL_TRUE = 
HAVE_X_FALSE = 
HAVE_X_TRUE = #
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LATEX = /usr/bin/latex
#LDFLAGS = 
LDFLAGS = -export-dynamic
LDFLAGS = 
LEX = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run flex
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBOBJS = 
LIBS = -lz -lcrypt -lm -lnsl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/missing --run makeinfo
OBJEXT = o
PACKAGE = wograld
PACKAGE_BUGREPORT = wograld-devel@listserv.real-time.com
PACKAGE_NAME = wograld
PACKAGE_STRING = wograld 1.9.1
PACKAGE_TARNAME = wograld
PACKAGE_VERSION = 1.9.1
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PLUGIN_PYTHON = 
PROCESS_XSLT_FALSE = 
PROCESS_XSLT_TRUE = #
PYTHON_LIB = 
PYTHON_PLUGIN_FALSE = 
PYTHON_PLUGIN_TRUE = #
PY_INCLUDES = 
PY_LIBS = 
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
TAR = /bin/tar
UNCOMPRESS = /bin/uncompress
VERSION = 1.9.1
X11LIBS =   -lX11 -lICE -lSM -lXext -lXt -lpng -lz
XSLTENGINE = 
X_CFLAGS = 
X_EXTRA_LIBS = 
X_LIBS = 
X_PRE_LIBS = 
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
check_xslt_forcedprogfound = 
check_xslt_sablotronfound = notfound
check_xslt_xsltprocfound = notfound
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/lori/Wogralddev/workingcvs/wogtesta/server/utils/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
no_x = yes
oldincludedir = /usr/include
pkgconfdir = ${prefix}/etc/wograld
pkgstatedir = ${prefix}/var/wograld
prefix = /usr/games/wograld
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
x_includes = NONE
x_libraries = NONE
#LIBDL = 
LIBDL = -ldl
#note all .a are here twice for compilation problems
AM_LIBTOOLFLAGS = --preserve-dup-deps
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
        --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
       $(LDFLAGS) -o $@

LDADD = ../../../server/libserver.a \
                ../../../common/libcross.a \
                ../../../random_maps/librandom_map.a \
                ../../../socket/libsocket.a \
                ../../../server/libserver.a \
                ../../../common/libcross.a \
                ../../../random_maps/librandom_map.a \
                ../../../socket/libsocket.a \
                $(LIBDL) 

TESTS = check_alchemy check_apply check_attack check_ban check_build_map check_c_chat check_c_misc check_c_move check_c_new check_c_object check_commands check_c_party check_c_range check_c_wiz check_daemon check_disease check_egoitem check_gods check_hiscore check_init check_login check_main check_monster check_move check_pets check_player check_plugins check_resurrection check_rune check_shop check_skills check_skill_util check_spell_attack check_spell_effect check_spell_util check_swamp check_swap check_time check_timers check_weather check_win32
CHECK_ROOT = ../../
CHECK_FOLDER = unit/server
CHECK_PARENT_NAME = Unit
LOGDIR = $(top_srcdir)/test/logs/$(CHECK_FOLDER)
INCLUDES = -I${top_srcdir}/include -I${top_srcdir}/test/include
BUILT_SOURCES = $(LOGDIR)
AM_CPPFLAGS = -DRESSOURCES=\"$(srcdir)/../../resources\" -DLOGDIR=\"$(top_srcdir)/test/logs\" -DSOURCE_ROOT=\"$(srcdir)/../../../\"
#CHECK_HTML = logreport template-copy
#CHECK_TXT = textlog
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/check-fragment.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  test/unit/server/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  test/unit/server/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
check_alchemy$(EXEEXT): $(check_alchemy_OBJECTS) $(check_alchemy_DEPENDENCIES) 
	@rm -f check_alchemy$(EXEEXT)
	$(LINK) $(check_alchemy_LDFLAGS) $(check_alchemy_OBJECTS) $(check_alchemy_LDADD) $(LIBS)
check_apply$(EXEEXT): $(check_apply_OBJECTS) $(check_apply_DEPENDENCIES) 
	@rm -f check_apply$(EXEEXT)
	$(LINK) $(check_apply_LDFLAGS) $(check_apply_OBJECTS) $(check_apply_LDADD) $(LIBS)
check_attack$(EXEEXT): $(check_attack_OBJECTS) $(check_attack_DEPENDENCIES) 
	@rm -f check_attack$(EXEEXT)
	$(LINK) $(check_attack_LDFLAGS) $(check_attack_OBJECTS) $(check_attack_LDADD) $(LIBS)
check_ban$(EXEEXT): $(check_ban_OBJECTS) $(check_ban_DEPENDENCIES) 
	@rm -f check_ban$(EXEEXT)
	$(LINK) $(check_ban_LDFLAGS) $(check_ban_OBJECTS) $(check_ban_LDADD) $(LIBS)
check_build_map$(EXEEXT): $(check_build_map_OBJECTS) $(check_build_map_DEPENDENCIES) 
	@rm -f check_build_map$(EXEEXT)
	$(LINK) $(check_build_map_LDFLAGS) $(check_build_map_OBJECTS) $(check_build_map_LDADD) $(LIBS)
check_c_chat$(EXEEXT): $(check_c_chat_OBJECTS) $(check_c_chat_DEPENDENCIES) 
	@rm -f check_c_chat$(EXEEXT)
	$(LINK) $(check_c_chat_LDFLAGS) $(check_c_chat_OBJECTS) $(check_c_chat_LDADD) $(LIBS)
check_c_misc$(EXEEXT): $(check_c_misc_OBJECTS) $(check_c_misc_DEPENDENCIES) 
	@rm -f check_c_misc$(EXEEXT)
	$(LINK) $(check_c_misc_LDFLAGS) $(check_c_misc_OBJECTS) $(check_c_misc_LDADD) $(LIBS)
check_c_move$(EXEEXT): $(check_c_move_OBJECTS) $(check_c_move_DEPENDENCIES) 
	@rm -f check_c_move$(EXEEXT)
	$(LINK) $(check_c_move_LDFLAGS) $(check_c_move_OBJECTS) $(check_c_move_LDADD) $(LIBS)
check_c_new$(EXEEXT): $(check_c_new_OBJECTS) $(check_c_new_DEPENDENCIES) 
	@rm -f check_c_new$(EXEEXT)
	$(LINK) $(check_c_new_LDFLAGS) $(check_c_new_OBJECTS) $(check_c_new_LDADD) $(LIBS)
check_c_object$(EXEEXT): $(check_c_object_OBJECTS) $(check_c_object_DEPENDENCIES) 
	@rm -f check_c_object$(EXEEXT)
	$(LINK) $(check_c_object_LDFLAGS) $(check_c_object_OBJECTS) $(check_c_object_LDADD) $(LIBS)
check_c_party$(EXEEXT): $(check_c_party_OBJECTS) $(check_c_party_DEPENDENCIES) 
	@rm -f check_c_party$(EXEEXT)
	$(LINK) $(check_c_party_LDFLAGS) $(check_c_party_OBJECTS) $(check_c_party_LDADD) $(LIBS)
check_c_range$(EXEEXT): $(check_c_range_OBJECTS) $(check_c_range_DEPENDENCIES) 
	@rm -f check_c_range$(EXEEXT)
	$(LINK) $(check_c_range_LDFLAGS) $(check_c_range_OBJECTS) $(check_c_range_LDADD) $(LIBS)
check_c_wiz$(EXEEXT): $(check_c_wiz_OBJECTS) $(check_c_wiz_DEPENDENCIES) 
	@rm -f check_c_wiz$(EXEEXT)
	$(LINK) $(check_c_wiz_LDFLAGS) $(check_c_wiz_OBJECTS) $(check_c_wiz_LDADD) $(LIBS)
check_commands$(EXEEXT): $(check_commands_OBJECTS) $(check_commands_DEPENDENCIES) 
	@rm -f check_commands$(EXEEXT)
	$(LINK) $(check_commands_LDFLAGS) $(check_commands_OBJECTS) $(check_commands_LDADD) $(LIBS)
check_daemon$(EXEEXT): $(check_daemon_OBJECTS) $(check_daemon_DEPENDENCIES) 
	@rm -f check_daemon$(EXEEXT)
	$(LINK) $(check_daemon_LDFLAGS) $(check_daemon_OBJECTS) $(check_daemon_LDADD) $(LIBS)
check_disease$(EXEEXT): $(check_disease_OBJECTS) $(check_disease_DEPENDENCIES) 
	@rm -f check_disease$(EXEEXT)
	$(LINK) $(check_disease_LDFLAGS) $(check_disease_OBJECTS) $(check_disease_LDADD) $(LIBS)
check_egoitem$(EXEEXT): $(check_egoitem_OBJECTS) $(check_egoitem_DEPENDENCIES) 
	@rm -f check_egoitem$(EXEEXT)
	$(LINK) $(check_egoitem_LDFLAGS) $(check_egoitem_OBJECTS) $(check_egoitem_LDADD) $(LIBS)
check_gods$(EXEEXT): $(check_gods_OBJECTS) $(check_gods_DEPENDENCIES) 
	@rm -f check_gods$(EXEEXT)
	$(LINK) $(check_gods_LDFLAGS) $(check_gods_OBJECTS) $(check_gods_LDADD) $(LIBS)
check_hiscore$(EXEEXT): $(check_hiscore_OBJECTS) $(check_hiscore_DEPENDENCIES) 
	@rm -f check_hiscore$(EXEEXT)
	$(LINK) $(check_hiscore_LDFLAGS) $(check_hiscore_OBJECTS) $(check_hiscore_LDADD) $(LIBS)
check_init$(EXEEXT): $(check_init_OBJECTS) $(check_init_DEPENDENCIES) 
	@rm -f check_init$(EXEEXT)
	$(LINK) $(check_init_LDFLAGS) $(check_init_OBJECTS) $(check_init_LDADD) $(LIBS)
check_login$(EXEEXT): $(check_login_OBJECTS) $(check_login_DEPENDENCIES) 
	@rm -f check_login$(EXEEXT)
	$(LINK) $(check_login_LDFLAGS) $(check_login_OBJECTS) $(check_login_LDADD) $(LIBS)
check_main$(EXEEXT): $(check_main_OBJECTS) $(check_main_DEPENDENCIES) 
	@rm -f check_main$(EXEEXT)
	$(LINK) $(check_main_LDFLAGS) $(check_main_OBJECTS) $(check_main_LDADD) $(LIBS)
check_monster$(EXEEXT): $(check_monster_OBJECTS) $(check_monster_DEPENDENCIES) 
	@rm -f check_monster$(EXEEXT)
	$(LINK) $(check_monster_LDFLAGS) $(check_monster_OBJECTS) $(check_monster_LDADD) $(LIBS)
check_move$(EXEEXT): $(check_move_OBJECTS) $(check_move_DEPENDENCIES) 
	@rm -f check_move$(EXEEXT)
	$(LINK) $(check_move_LDFLAGS) $(check_move_OBJECTS) $(check_move_LDADD) $(LIBS)
check_pets$(EXEEXT): $(check_pets_OBJECTS) $(check_pets_DEPENDENCIES) 
	@rm -f check_pets$(EXEEXT)
	$(LINK) $(check_pets_LDFLAGS) $(check_pets_OBJECTS) $(check_pets_LDADD) $(LIBS)
check_player$(EXEEXT): $(check_player_OBJECTS) $(check_player_DEPENDENCIES) 
	@rm -f check_player$(EXEEXT)
	$(LINK) $(check_player_LDFLAGS) $(check_player_OBJECTS) $(check_player_LDADD) $(LIBS)
check_plugins$(EXEEXT): $(check_plugins_OBJECTS) $(check_plugins_DEPENDENCIES) 
	@rm -f check_plugins$(EXEEXT)
	$(LINK) $(check_plugins_LDFLAGS) $(check_plugins_OBJECTS) $(check_plugins_LDADD) $(LIBS)
check_resurrection$(EXEEXT): $(check_resurrection_OBJECTS) $(check_resurrection_DEPENDENCIES) 
	@rm -f check_resurrection$(EXEEXT)
	$(LINK) $(check_resurrection_LDFLAGS) $(check_resurrection_OBJECTS) $(check_resurrection_LDADD) $(LIBS)
check_rune$(EXEEXT): $(check_rune_OBJECTS) $(check_rune_DEPENDENCIES) 
	@rm -f check_rune$(EXEEXT)
	$(LINK) $(check_rune_LDFLAGS) $(check_rune_OBJECTS) $(check_rune_LDADD) $(LIBS)
check_shop$(EXEEXT): $(check_shop_OBJECTS) $(check_shop_DEPENDENCIES) 
	@rm -f check_shop$(EXEEXT)
	$(LINK) $(check_shop_LDFLAGS) $(check_shop_OBJECTS) $(check_shop_LDADD) $(LIBS)
check_skill_util$(EXEEXT): $(check_skill_util_OBJECTS) $(check_skill_util_DEPENDENCIES) 
	@rm -f check_skill_util$(EXEEXT)
	$(LINK) $(check_skill_util_LDFLAGS) $(check_skill_util_OBJECTS) $(check_skill_util_LDADD) $(LIBS)
check_skills$(EXEEXT): $(check_skills_OBJECTS) $(check_skills_DEPENDENCIES) 
	@rm -f check_skills$(EXEEXT)
	$(LINK) $(check_skills_LDFLAGS) $(check_skills_OBJECTS) $(check_skills_LDADD) $(LIBS)
check_spell_attack$(EXEEXT): $(check_spell_attack_OBJECTS) $(check_spell_attack_DEPENDENCIES) 
	@rm -f check_spell_attack$(EXEEXT)
	$(LINK) $(check_spell_attack_LDFLAGS) $(check_spell_attack_OBJECTS) $(check_spell_attack_LDADD) $(LIBS)
check_spell_effect$(EXEEXT): $(check_spell_effect_OBJECTS) $(check_spell_effect_DEPENDENCIES) 
	@rm -f check_spell_effect$(EXEEXT)
	$(LINK) $(check_spell_effect_LDFLAGS) $(check_spell_effect_OBJECTS) $(check_spell_effect_LDADD) $(LIBS)
check_spell_util$(EXEEXT): $(check_spell_util_OBJECTS) $(check_spell_util_DEPENDENCIES) 
	@rm -f check_spell_util$(EXEEXT)
	$(LINK) $(check_spell_util_LDFLAGS) $(check_spell_util_OBJECTS) $(check_spell_util_LDADD) $(LIBS)
check_swamp$(EXEEXT): $(check_swamp_OBJECTS) $(check_swamp_DEPENDENCIES) 
	@rm -f check_swamp$(EXEEXT)
	$(LINK) $(check_swamp_LDFLAGS) $(check_swamp_OBJECTS) $(check_swamp_LDADD) $(LIBS)
check_swap$(EXEEXT): $(check_swap_OBJECTS) $(check_swap_DEPENDENCIES) 
	@rm -f check_swap$(EXEEXT)
	$(LINK) $(check_swap_LDFLAGS) $(check_swap_OBJECTS) $(check_swap_LDADD) $(LIBS)
check_time$(EXEEXT): $(check_time_OBJECTS) $(check_time_DEPENDENCIES) 
	@rm -f check_time$(EXEEXT)
	$(LINK) $(check_time_LDFLAGS) $(check_time_OBJECTS) $(check_time_LDADD) $(LIBS)
check_timers$(EXEEXT): $(check_timers_OBJECTS) $(check_timers_DEPENDENCIES) 
	@rm -f check_timers$(EXEEXT)
	$(LINK) $(check_timers_LDFLAGS) $(check_timers_OBJECTS) $(check_timers_LDADD) $(LIBS)
check_weather$(EXEEXT): $(check_weather_OBJECTS) $(check_weather_DEPENDENCIES) 
	@rm -f check_weather$(EXEEXT)
	$(LINK) $(check_weather_LDFLAGS) $(check_weather_OBJECTS) $(check_weather_LDADD) $(LIBS)
check_win32$(EXEEXT): $(check_win32_OBJECTS) $(check_win32_DEPENDENCIES) 
	@rm -f check_win32$(EXEEXT)
	$(LINK) $(check_win32_LDFLAGS) $(check_win32_OBJECTS) $(check_win32_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/check_alchemy.Po
include ./$(DEPDIR)/check_apply.Po
include ./$(DEPDIR)/check_attack.Po
include ./$(DEPDIR)/check_ban.Po
include ./$(DEPDIR)/check_build_map.Po
include ./$(DEPDIR)/check_c_chat.Po
include ./$(DEPDIR)/check_c_misc.Po
include ./$(DEPDIR)/check_c_move.Po
include ./$(DEPDIR)/check_c_new.Po
include ./$(DEPDIR)/check_c_object.Po
include ./$(DEPDIR)/check_c_party.Po
include ./$(DEPDIR)/check_c_range.Po
include ./$(DEPDIR)/check_c_wiz.Po
include ./$(DEPDIR)/check_commands.Po
include ./$(DEPDIR)/check_daemon.Po
include ./$(DEPDIR)/check_disease.Po
include ./$(DEPDIR)/check_egoitem.Po
include ./$(DEPDIR)/check_gods.Po
include ./$(DEPDIR)/check_hiscore.Po
include ./$(DEPDIR)/check_init.Po
include ./$(DEPDIR)/check_login.Po
include ./$(DEPDIR)/check_main.Po
include ./$(DEPDIR)/check_monster.Po
include ./$(DEPDIR)/check_move.Po
include ./$(DEPDIR)/check_pets.Po
include ./$(DEPDIR)/check_player.Po
include ./$(DEPDIR)/check_plugins.Po
include ./$(DEPDIR)/check_resurrection.Po
include ./$(DEPDIR)/check_rune.Po
include ./$(DEPDIR)/check_shop.Po
include ./$(DEPDIR)/check_skill_util.Po
include ./$(DEPDIR)/check_skills.Po
include ./$(DEPDIR)/check_spell_attack.Po
include ./$(DEPDIR)/check_spell_effect.Po
include ./$(DEPDIR)/check_spell_util.Po
include ./$(DEPDIR)/check_swamp.Po
include ./$(DEPDIR)/check_swap.Po
include ./$(DEPDIR)/check_time.Po
include ./$(DEPDIR)/check_timers.Po
include ./$(DEPDIR)/check_weather.Po
include ./$(DEPDIR)/check_win32.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am check-local \
	clean clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am


../../logs/unit/server:
	(mkdir ../../logs; mkdir ../../logs/unit; mkdir ../../logs/unit/server)
../../../common/libcross.a:
	( cd ../../../common ; make libcross.a )
../../../socket/libsocket.a:
	( cd ../../../socket ; make libsocket.a )
../../../random_maps/librandom_map.a:
	( cd ../../../random_maps ; make librandom_map.a )
../../../server/libserver.a:
	( cd ../../../server ; make libserver.a )
$(LOGDIR):
	mkdir -p $(LOGDIR)
automenu:
	@echo "Building menu entry..."
	@subdirs='$(SUBDIRS)';\
	list='$(TESTS)'; \
	dir='$(LOGDIR)'; \
	srcdir='$(top_srcdir)'; \
	output_menu=$${dir}/.automenu.xml; \
	parentfoldername=$(CHECK_PARENT_NAME); \
	echo '<?xml version="1.0"?><menu>' > $$output_menu; \
	echo '<parentMenu>$(CHECK_PARENT_NAME)</parentMenu>' >> $$output_menu;\
	for tst in $$list; do \
	  tst=$${tst/check_/} ; \
	  tst=$${tst/-/_} ; \
	  xml=$(LOGDIR)/$${tst}.xml ;\
	  if test -e "$$xml"; then \
	      successCount=`grep -c 'result="success"' $$xml`;\
	      errorCount=`grep -c 'result="error"' $$xml`;\
	      failureCount=`grep -c 'result="failure"' $$xml`;\
	      echo '<entry success="'$${successCount}'" error="'$${errorCount}'" failure="'$${failureCount}'">'$$tst'</entry>' >> $$output_menu; \
	  fi; \
	done; \
	for sub in $$subdirs; do \
	    if test -e $${dir}/$${sub}/.automenu.xml; then \
	       echo '<subDirectory name="'$${sub}'"/>' >> $$output_menu; \
	    fi; \
	done;\
	echo "</menu>" >> $$output_menu

logreport: automenu
	@echo "processing logs to html..."
	@list='$(TESTS)'; \
	srcdir='$(top_srcdir)'; \
	xsl=$${srcdir}/test/templates/logresult.xsl ; \
	xsltproc='$(XSLTENGINE)';\
	xsltproc=$${xsltproc/\%2/$$xsl};\
	xml_siteuri='$(CHECK_ROOT)' ;\
	xml_check_folder='../logs/$(CHECK_FOLDER)' ;\
	runxml='.autorun.xml';\
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    tst=$${tst/check_/} ; \
	    tst=$${tst/-/_} ; \
	    checkFile=$${tst}.xml ;\
	    echo '<?xml version="1.0"?><config>' > $$runxml;\
	    echo "<baseSiteUri>$$xml_siteuri</baseSiteUri>" >> $$runxml;\
	    echo "<checkFile>$$checkFile</checkFile>" >> $$runxml;\
	    echo "<checkFolder>$$xml_check_folder</checkFolder></config>" >> $$runxml;\
	    html=$(LOGDIR)/$${tst}.html ;\
	    if test -e "$(LOGDIR)/$$xml"; then \
	        torun=$${xsltproc/\%1/$$runxml};\
	        torun=$${torun/\%3/$$html};\
	        echo "running $$torun";\
	        $$torun; \
	    fi; \
	  done; \
	else :; fi; \
	echo '<?xml version="1.0"?><config>' > $$runxml;\
	echo "<baseSiteUri>$$xml_siteuri</baseSiteUri>" >> $$runxml;\
	echo "<checkFolder>$$xml_check_folder</checkFolder></config>" >> $$runxml;\
	html=$(LOGDIR)/.index.html ;\
	torun=$${xsltproc/\%1/$$runxml};\
	torun=$${torun/\%3/$$html};\
	echo "running $$torun";\
	$$torun;
template-copy: $(LOGDIR)
	@echo copying template
	@if test -d "$(top_srcdir)/test/templates/$(CHECK_FOLDER)"; then \
	    cp $(top_srcdir)/test/templates/$(CHECK_FOLDER)/[^C]* $(LOGDIR)/;\
	fi
textlog:
	@echo "processing logs to text..."
	@srcdir='$(top_srcdir)'; \
	xsl=$${srcdir}/test/templates/checkTextResult.xsl ; \
	xsltproc='$(XSLTENGINE)';\
	xsltproc=$${xsltproc/\%2/$$xsl};\
	xml_siteuri='$(CHECK_ROOT)' ;\
	xml_check_folder='../logs/$(CHECK_FOLDER)' ;\
	runxml='.autorun.xml';\
	echo '<?xml version="1.0"?><config>' > $$runxml;\
	echo "<baseSiteUri>$$xml_siteuri</baseSiteUri>" >> $$runxml;\
	echo "<checkFolder>$$xml_check_folder</checkFolder></config>" >> $$runxml;\
	txt=$(LOGDIR)/testlog.txt ;\
	torun=$${xsltproc/\%1/$$runxml};\
	torun=$${torun/\%3/$$txt};\
	echo "running $$torun";\
	$$torun;
check-html: $(CHECK_HTML)
check-text: $(CHECK_TXT)
clean-unit:
	rm -f autorun.xml

check-local: check-html
clean-local: clean-unit
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
