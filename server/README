WHAT IS WOGRALD?

  This is a multiplayer graphical arcade and adventure game made for Java. But
  we have an old depreciated gtk and x11 clients.  The Java client should
  run on all platforms that support Java.
  
Right now it has certain flavours from other games, especially Gauntlet (TM)
  and Nethack/Moria.  Really, we want it to resemble games such as Ultima
Online and Runescape more closely since thesse are more popular games that
ordinary users will love. 

  Any number of players can move around in their own window, finding
  and using items and battle monsters.  They can choose to cooperate
  or compete in the same "world".

REQUIREMENTS

  For UNIX, X-windows and an ANSI C compiler to compile this game.
  A window system is not needed to compile the server.
  
  For Windows 9x, you need Visual C++ (or some other ANSI C
  compiler that can read ".dsw"-files). (no idea if this works with wograld)
  
COMPILING

  Wograld has been known to compile on a wide variety of
  systems.  It should compile and most all ANSI C and Posix
  compliant systems.

  To get directions on compilation for UNIX/LINUX,read the install below
 or read the admin-install file in the 
server folder.  No idea how, or if it can be gotten to work on windows.
  For Win9x, read INSTALL_WIN32.txt.

INSTALL

Installation Instructions

Fresh Install

for the server:
1)  Create a source directory under "home".  
    Drop all files from git clone https://git.code.sf.net/p/wograld/gitcode wograld-gitcode, or .tgz file, into here. "/home/wograld" or whatever you want
 

3) Make sure you are in the directory "/home/wograld"/server 
   At the command prompt on your terminal type
    ./configure
    then type
    make
    then log into root mode or sudo
    make install
    To run your server set your directory to "/home/wograld"/server/server and type:
    ./wograld
    
    This is commonly known as Configure, make, make install and is used for compiling many software programs.

4)  If it compiled, it should be installed in
    /usr/games/wograld/bin or /usr/games/wograld/bin

5)  Go to /usr/games/wograld/share/wograld
    if there isn't a "maps" subfolder, it needs to be
    created.

6)  The maps subfolder is part of the project. Put these files 
into /usr/games/wograld/share/wograld/maps


7) if wograld.2 is missing copy it from the server/lib folder into the /usr/games/wograld/share/wograld
folder.

8) go to the "/home/wograld"/server/lib/arch folder, and copy the treasures file into /usr/games/wograld/share/wograld folder 

10) Go to "/usr/games/wograld/bin".  Type "./wograld"
    or "./wograld" to start the server.

11) For now, run server as root, there are certain folders that need premissions for the saving of maps and players.
I will figure out what premissions need to be changed later. (TODO)

Getting the client

1)You will want to have a working client, preferably the latest from the git repository 
(releases are usually pretty dated)
    Get the client source from wograld-gitcode/javaclient/javaclient/trunk/

2)type ant at the command line. The other two clients are depreciated.

3)type java -jar jxclient.jar from the command line.  Make sure the java program is set
to be an executeable. If you try to run it from the gui, music may not work
(should be fixxed in future versions TODO)

4)we currently have music with the java client, but not sounds (should be fixxed in
future versions (TODO)


    
Administration Instructions

Changing the artwork

to add new graphics, 
1)  You should use the new arches from git  server/lib/arch
2)  Put the files into "/home/wograld"server/lib/arch/.
3) Go to "/home/wograld"/lib/ and type "make collect".
    This does some parsing of ".png" and ".arc" to create
    files for monsters and other objects.

4) Go to "/usr/games/wograld/share/wograld" and back up the
    files for animations,archetypes,bmaps,bmaps.paths,wograld.0,
    wograld.1,wograld.2,faces,smooth.
5) Return to "home/wograld"/lib.  Copy
	animations,archetypes,bmaps,bmaps.paths,wograld.0,
    wograld.1,wograld.2,faces,smooth into 
    "/usr/games/wograld/share/wograld"
6) go to the "/home/wograld"/server/lib/arch folder, and copy the treasures file into /usr/games/wograld/share/wograld folder;
	for now do not use the one produced from "make collect"

Changing the code  

1) drop all the files into /home/wograld or whereever you put it.
2)  ./configure  make    make install

Adding maps

1) this is a nontrivial task, but the editor is intuitive
   for basic terrain
2) maps have to be linked by exits to other maps, because
   the server is designed to initialize users to a start map
3) a process for hobbyists supplying maps and admin approval
   and checkin to the public server will be available 

Adding new music and adding music to maps

1) In the javaclient, subfolder trunk/resource/music/
   Has a list of existing *.ogg files.  A new map for local hosting or
   to submit to the main project, can refer to any of these or to a new track
   You can add a new ogg file here if you want to.
   It is not likely that a remote server will choose it unless you submit
   the required files and they are accepted

2) In a map file, look for the keyword "background_music" in the map header
   that is, as part of the "arch map".  This can be changed from the map editor
   or from the text editor.  If no "background_music" keyword is found by the
   server, it will choose a default music track. If you add a new music track
   to the javaclient resouces then you can use its name as the key value

3) In the javaclient, if you add a music track that was not there before,
   go to the folder
   trunk/src/jxclient/com/realtime/crossfire/jxclient/server/crossfire/
   and backup the file DefaultCrossfireServerConnection.java
   Then open the original file, and go to the method "processMusic()".
   Find the statements "if track==1".
   Then add a new case with the new track name.
   Write down the case number, as the server code needs to know this.

4) Go to the javaclient "trunk" folder and try to build using "ant".
   If build is successful, proceed to the next step, else check syntax.
   It will probably build even if the track name is incorrect, so verify.

5) Go to the server "common/" folder and back up the file "map.c".
   as a non .c file.  Find the function "load_map_header()"
   and find the keyword "background_music".
   Add a case, using the new number from step 3, for the track name.
   The track name should match that in the map file.


USAGE

  Wograld runs on a client/server model.  You will also need the
  client to play.  You can either connect to a server someone else
  has set up, or run your own server and connect to that.  The
  client package has information for connecting to servers.

  To run your own server, you need to make the wograld binaries and install
  them, and then run the wograld program.  This now creates a server which
  you/other people can connect to.  The map files will need to get downloaded
  and installed for the server to run properly.  The maps should be
  unpacked in the $(TARGET)/share/wograld directory - after unpacking,
  you should have a $(TARGET)/share/wograld/maps directory.

  If you plan to run a long term server, you should use one of the scripts
  provided that will re-run wograld if it dies for some reason.

MAILING LIST

  For the latest subscription for wograld mailing lists, go to:
  http://sourceforge.net/mail/?group_id=184075

  From there you should be able to subscribe/unsubscribe any of the mailing
  lists.  Links to archives of the mailing lists can be found there, as well
  as at this link for the discussion list:
  https://lists.sourceforge.net/lists/listinfo/wograld-discuss

  Message forum can be found here:
https://www.reddit.com/r/Wograld/

FTP SITES

  FTP-sites where you can look for the latest versions are currently non-existant.

  Changes made since the latest release can be found at the Gitcode
  repository.  Information on anonymous git access as 
  the download git snapshots and browsing the repository can be 
  found at:
	https://sourceforge.net/p/wograld/gitcode/ci/master/tree/


WEB SITES:

  The following web addresses have wograld information that you may find
  useful:

  http://www.wograld.org/
  is the main wograld site.


REPORTING BUGS

  First, check the INSTALL file  and the admin-install for common problems, and see if yours is
  mentioned.

  Bugs should be filed at the sourceforge web site:
        http://sourceforge.net/tracker/?group_id=184075&atid=907801

  When reporting bugs, make sure you include the following:
  o If you have a sourceforge login, make sure you are logged in.  In this
    way, if there are questions about the bug, you will be notified about
    the request for more information.
  o What version of wograld did you use?
  o What type of computer did you use (CPU type)
  o What is the version of the OS (ie Debian testing, fedora core 16 etc) ?
  o What windowing system are you using (Ie, openwindows, X11R6, etc)
  o What compiler (and its version) did you use (ie, gcc, acc, etc)?
  o Which flags did you give it?
  o If the bug happens when compiling wograld, send an EXACT copy of
    the compiler line, as well as the errors it puts out.  Sending bugs
    of the sort 'it failed with a line like ...' doesn't help any.
  o If the bug happened while running wograld:
    - Include any output before to the bug.
    - Give a description of what you did before the bug occured.  The better
	detailed the description, the better chance I have of figuring
	out where the bug happened, or how I can recreate the bug.
    - If possible, a stack trace from gdb (or other debugger) is very
      helpful.

The more information provided, the better chance of the bug being fixed in
a timely fashion.

Further debugging informatiion can be found at
http://crossfire.real-time.com/debugging_tips.html (this is for crossfire,
do not submit Wograld bugs there.)

------------------------------------------------------------------------------
SUBMITTING PATCHES:  See the doc/programming_guide file.
   The patches should be submitted to the patch tracker on sourceforge:
        http://sourceforge.net/tracker/?group_id=184075&atid=907803

PUBLIC SERVERS:

The best way to find a server to play is to run the client.  It will contact
the metaserver and present a list to choose from.  Unfortunatly, we do not have
a metaserver for wograld up yet.

COPYRIGHT

    Don't get scared by the below, it's included just for "safety" reasons 8)
    (Don't want anyone to start selling the game)
    Copyright (C) 2006,2012 Lori Nagel
    Copyright (C) 2000,2006 Mark Wedel
    Copyright (C) 1992 Frank Tore Johansen

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

    The author can be reached via e-mail to jastiv@yahoo.com
